/*Retrieve the total number of orders placed.*/
SELECT COUNT(ORDER_ID) TOTAL_ORDERS FROM ORDER_DETAILS;

/*Calculate the total revenue generated from pizza sales.*/
SELECT ROUND(SUM(P.PRICE * O.QUANTITY), 2) AS TOTAL_REVENUE
FROM PIZZAS P
JOIN ORDER_DETAILS O
ON O.PIZZA_ID = P.PIZZA_ID;

/*Identify the highest-priced pizza with pizza name.*/
SELECT PT.NAME,P.PRICE
FROM PIZZA_TYPES PT
JOIN PIZZAS P
ON PT.PIZZA_TYPE_ID=P.PIZZA_TYPE_ID
ORDER BY P.PRICE DESC LIMIT 1;

/*Identify the most common pizza size ordered.*/
SELECT P.SIZE,
COUNT(O.ORDER_DETAILS_ID) AS ORDER_COUNT
FROM PIZZAS P
JOIN ORDER_DETAILS O
ON O.PIZZA_ID = P.PIZZA_ID
GROUP BY P.SIZE
ORDER BY ORDER_COUNT DESC;

/*List the top 5 most ordered pizza types along with their quantities.*/
SELECT PT.NAME,
SUM(O.QUANTITY) AS TOTAL_SUM
FROM PIZZA_TYPES PT
JOIN PIZZAS P
ON P.PIZZA_TYPE_ID=PT.PIZZA_TYPE_ID
JOIN ORDER_DETAILS O
ON P.PIZZA_ID=O.PIZZA_ID
GROUP BY PT.NAME
ORDER BY TOTAL_SUM DESC LIMIT 5;

/*Determine the distribution of orders by hour of the day.*/
SELECT HOUR(TIME) AS ORDER_HOURS,
COUNT(ORDER_ID) AS ORDER_COUNT
FROM ORDERS
GROUP BY ORDER_HOURS
ORDER BY ORDER_HOURS;

/*Group the orders by date and calculate the average of total number of pizzas ordered per day.*/
WITH CTE AS(
SELECT O.DATE,SUM(OD.QUANTITY) AS QTY
FROM ORDERS O
JOIN ORDER_DETAILS OD
ON O.ORDER_ID=OD.ORDER_ID
GROUP BY O.DATE
ORDER BY QTY DESC
)
SELECT FLOOR(AVG(QTY))AS AVG_NUMBER_OF_PIZZA 
FROM CTE;

/*Determine the to 3 most ordered pizza types based on revenue.*/
SELECT PT.NAME AS PIZZA_NAME,
ROUND(SUM(P.PRICE * O.QUANTITY), 2) AS TOTAL_REVENUE
FROM ORDER_DETAILS O 
JOIN PIZZAS P
ON O.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES PT
ON P.PIZZA_TYPE_ID=PT.PIZZA_TYPE_ID
GROUP BY PT.NAME
ORDER BY TOTAL_REVENUE DESC
LIMIT 3;

/*Calculate the percentage contribution of each pizza category type to total revenue.*/
WITH CATEGORY_REVENUE AS (
    SELECT 
        PT.CATEGORY AS PIZZA_CATEGORY,
        ROUND(SUM(P.PRICE * O.QUANTITY), 2) AS CATEGORY_REVENUE
    FROM ORDER_DETAILS O 
    JOIN PIZZAS P ON O.PIZZA_ID = P.PIZZA_ID
    JOIN PIZZA_TYPES PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
    GROUP BY PT.CATEGORY
),
TOTAL_REVENUE AS (
    SELECT SUM(CATEGORY_REVENUE) AS TOTAL_REVENUE
    FROM CATEGORY_REVENUE
)
SELECT 
    C.PIZZA_CATEGORY,
    CONCAT(ROUND((C.CATEGORY_REVENUE * 100.0 / T.TOTAL_REVENUE), 2), '%') AS PERCENTAGE_CONTRIBUTION
FROM CATEGORY_REVENUE C
CROSS JOIN TOTAL_REVENUE T;

/*Analyze the cumulative revenue generated over monthly.*/
WITH REVENUE AS (
    SELECT 
        MONTH(O.DATE) AS MONTHS,
        FLOOR(SUM(P.PRICE * OD.QUANTITY)) AS REVENUE
    FROM ORDERS O
    JOIN ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
    JOIN PIZZAS P ON OD.PIZZA_ID = P.PIZZA_ID
    GROUP BY MONTH(O.DATE)
)
SELECT 
    MONTHS,
    REVENUE,
    SUM(REVENUE) OVER (ORDER BY MONTHS) AS CUMULATIVE_REVENUE
FROM REVENUE;

/*Determine the top 3 most ordered pizza types based on revenue for each pizza category.*/
WITH CATEGORY AS (
    SELECT 
        PT.CATEGORY AS CATEGORY,
        PT.NAME AS NAME,
        FLOOR(SUM(P.PRICE * OD.QUANTITY)) AS REVENUE
    FROM ORDER_DETAILS OD
    JOIN PIZZAS P ON OD.PIZZA_ID = P.PIZZA_ID
    JOIN PIZZA_TYPES PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
    GROUP BY PT.CATEGORY, PT.NAME
),
RANKING AS (
    SELECT 
        CATEGORY,
        NAME,
        REVENUE,
        DENSE_RANK() OVER (PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS RNK
    FROM CATEGORY
)
SELECT 
    CATEGORY,
    NAME,
    REVENUE 
FROM RANKING
WHERE RNK <= 3;